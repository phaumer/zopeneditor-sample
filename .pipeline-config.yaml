version: '1'

setup:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform The Setup"
    #env
    #ls -la $WORKSPACE/$APP_REPO_NAME
    #touch setup_jby

    # $WORKSPACE is shared between steps
    python3 -m venv $WORKSPACE/virtual/environment
    source $WORKSPACE/virtual/environment/bin/activate

    set -o xtrace

    # Install ansible
    pip3 install --only-binary=:all: ansible
    pip3 install ansible==2.9.11

    # Install xmltodict required for the z/OS collection ibm.ibm_zos_cics
    pip3 install xmltodict

    # Just for test (MUST NOT BE USED EXTERNALY)
    wget https://rpmfind.net/linux/centos/8-stream/AppStream/x86_64/os/Packages/sshpass-1.09-4.el8.x86_64.rpm
    rpm -i sshpass-1.09-4.el8.x86_64.rpm

    # Install RedHat Ansible collections for z/OS
    ansible-galaxy collection install ibm.ibm_zos_core
    ansible-galaxy collection install ibm.ibm_zos_cics

    if [ "$(get_env pipeline_namespace "")" = "cd" ]
    then
      echo "No setup when running CD pipeline..."
      exit 0
    else
      echo "Running in a CI pipeline..."
    fi

    #export TOOLCHAIN_CONFIG_JSON="/toolchain/toolchain.json"
    #cat $TOOLCHAIN_CONFIG_JSON

    TOOLCHAIN_CONFIG_JSON="$(get_env TOOLCHAIN_CONFIG_JSON)"
    toolchain_id=$(jq -r '.toolchain_guid' "$TOOLCHAIN_CONFIG_JSON")


    ls -la "/config"
    ls -la
    cd playbooks
    ansible-playbook -i inventories build.yml


    # Force failure
    exit 0

static-scan:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    # FIXME: image is mandatory?
    echo "Perform Static Scan"
    ls -la
    exit 0

test:
  abort_on_failure: true
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    #echo "Installing Python 3..."
    #apt-get -qq update && apt-get -qq install -y python3.10 && apt-get -qq install -y python3-pip
    source $WORKSPACE/virtual/environment/bin/activate
    ansible-playbook -i inventories build.yml
    exit 0

containerize:
  dind: true
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.6
  script: |
    #!/usr/bin/env bash
    python3 --version
    echo "Perform Build"
    exit 0

deploy:
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image@sha256:c1e9d5a9674a093635c386f96d35781aea7cad6cc1da86991ee1a85c854216f8
  script: |
    #!/usr/bin/env bash
    echo "Perform Deploy"
    exit 0

sign-artifact:
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform Sign Artifact"
    exit 0
acceptance-test:
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform Acceptance Test"
    exit 0

release:
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform Release"
    exit 0

dynamic-scan:
  dind: true
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform Dynamic Scan"
    exit 0

scan-artifact:
  dind: true
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-ubi@sha256:d59863621d3ba1b9bd47f76950c751e842405f9c303d0d4d4298d964b664ee85
  script: |
    #!/usr/bin/env bash
    echo "Perform Scan Artifact"
    exit 0

owasp-zap:
  dind: true
  abort_on_failure: false
  image: icr.io/continuous-delivery/pipeline/pipeline-base-image:2.12@sha256:ff4053b0bca784d6d105fee1d008cfb20db206011453071e86b69ca3fde706a4
  script: |
    #!/usr/bin/env bash
    echo "Perform owasp-zap"
    exit 0
